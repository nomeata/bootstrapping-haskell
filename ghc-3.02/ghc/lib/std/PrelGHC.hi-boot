---------------------------------------------------------------------------
-- 				GHC.hi
-- 
-- 	This hand-written interface file allows you to bring into scope the 
--	primitive operations and types that GHC knows about.
---------------------------------------------------------------------------

_interface_ PrelGHC 2 0
_exports_
PrelGHC
  ->

  All	-- Pseudo class used for universal quantification
  CCallable
  CReturnable

  Void
-- void CAF is defined in PrelBase

-- Magical assert thingy
  assert__

-- I/O primitives
  RealWorld
  realWorld#
  State#

  fork#
  delay# 
  seq#
  par#
  parGlobal#
  parLocal#
  parAt#
  parAtAbs#
  parAtRel#
  parAtForNow#

  SynchVar#
  newSynchVar#
  takeMVar#
  putMVar#
  waitRead#
  waitWrite#
  
  errorIO#
  
  Char# 
  gtChar#
  geChar#
  eqChar#
  neChar#
  ltChar#
  leChar#
  ord#
  chr#
  
  Int#
  >#
  >=#
  ==#
  /=#
  <#
  <=#
  +#
  -#
  *#
  /#
  quotInt#
  remInt#
  negateInt#
  iShiftL#
  iShiftRA#
  iShiftRL#
  
  Word#
  gtWord#
  geWord#
  eqWord#
  neWord#
  ltWord#
  leWord#
  quotWord#
  remWord#
  and#
  or#
  not#
  xor#
  shiftL#
  shiftRA#
  shiftRL#
  int2Word#
  word2Int#
  
  Addr#
  gtAddr#
  geAddr#
  eqAddr#
  neAddr#
  ltAddr#
  leAddr#
  int2Addr#
  addr2Int#
  
  Float#
  gtFloat#
  geFloat#
  eqFloat#
  neFloat#
  ltFloat#
  leFloat#
  plusFloat#
  minusFloat#
  timesFloat#
  divideFloat#
  negateFloat#
  float2Int#
  int2Float#
  expFloat#
  logFloat#
  sqrtFloat#
  sinFloat#
  cosFloat#
  tanFloat#
  asinFloat#
  acosFloat#
  atanFloat#
  sinhFloat#
  coshFloat#
  tanhFloat#
  powerFloat#
  decodeFloat#
  encodeFloat#
  
  Double#
  >##
  >=##
  ==##
  /=##
  <##
  <=##
  +##
  -##
  *##
  /##
  negateDouble#
  double2Int#
  int2Double#
  double2Float#
  float2Double#
  expDouble#
  logDouble#
  sqrtDouble#
  sinDouble#
  cosDouble#
  tanDouble#
  asinDouble#
  acosDouble#
  atanDouble#
  sinhDouble#
  coshDouble#
  tanhDouble#
  **##
  decodeDouble#
  encodeDouble#
  
  cmpInteger#
  negateInteger#
  plusInteger#
  minusInteger#
  timesInteger#
  quotRemInteger#
  integer2Int#
  integer2Word#
  int2Integer#
  word2Integer#
  
  Array#
  ByteArray#
  MutableArray#
  MutableByteArray#
  
  sameMutableArray#
  sameMutableByteArray#
  
  newArray#
  newCharArray#
  newIntArray#
  newWordArray#
  newFloatArray#
  newDoubleArray#
  newAddrArray#
  
  indexArray#
  indexCharArray#
  indexIntArray#
  indexWordArray#
  indexFloatArray#
  indexDoubleArray#
  indexAddrArray#
  
--  indexOffAddr#
indexCharOffAddr#
indexIntOffAddr#
indexWordOffAddr#
indexAddrOffAddr#
indexFloatOffAddr#
indexDoubleOffAddr#

--  indexOffForeignObj#
indexCharOffForeignObj#
indexIntOffForeignObj#
indexWordOffForeignObj#
indexAddrOffForeignObj#
indexFloatOffForeignObj#
indexDoubleOffForeignObj#
  
  writeArray#
  writeCharArray#
  writeIntArray#
  writeWordArray#
  writeFloatArray#
  writeDoubleArray#
  writeAddrArray#
  
  readArray#
  readCharArray#
  readIntArray#
  readWordArray#
  readFloatArray#
  readDoubleArray#
  readAddrArray#
  
  unsafeFreezeArray#
  unsafeFreezeByteArray#
  
  sizeofByteArray#
  sizeofMutableByteArray#

  ForeignObj#
  makeForeignObj#
  writeForeignObj#
  
  StablePtr#
  makeStablePtr#
  deRefStablePtr#
  reallyUnsafePtrEquality#

  unsafeCoerce#
;

_declarations_

1 class CCallable a :: ** ;
1 class CReturnable a :: ** ;
